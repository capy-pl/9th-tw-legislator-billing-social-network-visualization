{"version":3,"sources":["util.tsx","component/InteractiveGraph/Graph.tsx","component/InteractiveGraph/index.ts","component/InteractiveGraph/GraphController.tsx","component/LegislatorInfoTab/index.ts","component/LegislatorInfoTab/LegislatorInfoTab.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["base64Url","str","graphOption","edges","smooth","color","layout","improvedLayout","randomSeed","nodes","shape","borderWidth","borderWidthSelected","font","size","bold","scaling","min","max","physics","solver","barnesHut","springLength","gravitationalConstant","forceAtlas2Based","avoidOverlap","minVelocity","interaction","hover","tooltipDelay","Graph","containerRef","React","createRef","network","componentDidUpdate","repaint","props","hideNodes","length","update","map","id","hidden","legislators","legislator","this","current","DataSet","graph","forEach","node","add","toGraphNode","edge","weight","toGraphEdge","Network","on","e","onClickNode","border","party","getPartyColor","label","name","image","picBase64","value","highlight","from","to","initGraph","ref","PureComponent","GraphController","state","clickedParties","onClickPartyLabel","currentTarget","textContent","includes","setState","filter","val","clicked","filterNodes","showCommunities","onDoubleClickLegislatorNode","style","textAlign","marginTop","onClick","className","LegislatorInfoTab","type","aria-label","close","aria-hidden","src","alt","display","committee","join","areaName","degree","experience","App","clickedLegislatorId","showLegislatorInfoTab","onDoubleClick","onCloseInfoTab","LegislatorJson","InteractiveGraph","GraphJson","bills","BillJson","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+rjqoBAEO,SAASA,EAAUC,GACxB,MAAM,2BAAN,OAAkCA,GCuBpC,IAAMC,EAAuB,CAC3BC,MAAO,CACLC,QAAQ,EACRC,MAAO,4BAETC,OAAQ,CACNC,gBAAgB,EAChBC,WAAY,GAEdC,MAAO,CACLC,MAAO,gBACPC,YAAa,EACbC,oBAAqB,EACrBC,KAAM,CACJC,KAAM,GACNT,MAAO,UACPU,KAAM,CACJD,KAAM,KAGVE,QAAS,CACPC,IAAK,GACLC,IAAK,MAGTC,QAAS,CACPC,OAAQ,mBACRC,UAAW,CACTC,aAAc,IACdC,uBAAwB,MAE1BC,iBAAkB,CAChBF,aAAc,IACdC,uBAAwB,KACxBE,aAAc,IAEhBC,YAAa,IAEfC,YAAa,CACXC,OAAO,EACPC,aAAc,MAIGC,E,4MACXC,aAAeC,IAAMC,Y,EACrBC,a,IACAzB,W,IACAN,W,IAiEDgC,mBAAqB,WAEgC,IAAD,GADzD,EAAKC,UACD,EAAKC,MAAMC,WAAa,EAAKD,MAAMC,UAAUC,UAC/C,YAAK9B,aAAL,SAAY+B,OAAO,EAAKH,MAAMC,UAAUG,KAAI,SAACC,GAAD,MAAS,CACjDA,KACAC,QAAQ,S,EAMTP,QAAU,WAAO,IAAD,EACrB,YAAK3B,aAAL,SAAY+B,OAAO,EAAKH,MAAMO,YAAYH,KAAI,SAACI,GAAD,MAAiB,CAC7DH,GAAIG,EAAWH,GACfC,QAAQ,Q,0DA7EQ,IAAD,OACbG,KAAKf,cAAgBe,KAAKf,aAAagB,UACzCD,KAAKrC,MAAQ,IAAIuC,IAEjBF,KAAKT,MAAMY,MAAMxC,MAAMyC,SAAQ,SAACC,GAAU,IAAD,EACvC,YAAK1C,aAAL,SAAY2C,IAAI,EAAKC,YAAYF,OAGnCL,KAAK3C,MAAQ,IAAI6C,IACjBF,KAAKT,MAAMY,MAAM9C,MAAM+C,SAAQ,SAACI,GACP,IAAD,EAAlBA,EAAKC,OAAS,KAChB,YAAKpD,aAAL,SAAYiD,IAAI,EAAKI,YAAYF,QAIrCR,KAAKZ,QAAU,IAAIuB,IAAQX,KAAKf,aAAagB,QAAS,CACpDtC,MAAOqC,KAAKrC,MACZN,MAAO2C,KAAK3C,OACXD,GAEH4C,KAAKZ,QAAQwB,GAAG,eAAe,SAACC,GAC1BA,EAAElD,OAASkD,EAAElD,MAAM8B,OAAS,GAC9B,EAAKF,MAAMuB,YAAYD,EAAElD,MAAM,U,kCAMpB0C,GACjB,IAAMN,EAAaC,KAAKT,MAAMO,YAAYO,EAAKT,IACzCmB,EDpGH,SAAuBC,GAC5B,OAAOA,GACL,IAAK,iCACH,MAAO,UACT,IAAK,iCACH,MAAO,UACT,IAAK,qBACH,MAAO,UACT,IAAK,2BACH,MAAO,UACT,IAAK,uCACH,MAAO,UACT,QACE,MAAO,WCuFMC,CAAclB,EAAWiB,OACxC,MAAO,CACLpB,GAAIS,EAAKT,GACTsB,MAAM,GAAD,OAAKnB,EAAWoB,MACrBC,MAAOlE,EAAU6C,EAAWsB,WAC5BC,MAAOjB,EAAKI,OACZ1C,KAAM,CACJR,MAAOwD,EACP/C,KAAM,IAERT,MAAO,CACLwD,SACAjC,MAAO,CACLiC,UAEFQ,UAAW,CACTR,c,kCAMWP,GACjB,MAAO,CACLgB,KAAMhB,EAAKA,KAAK,GAChBiB,GAAIjB,EAAKA,KAAK,M,0CAKhBR,KAAK0B,c,+BAsBL,OACE,qBAAKC,IAAK3B,KAAKf,aAAcW,GAAG,yC,GAzFHV,IAAM0C,eCpE1BC,G,kNCuBNC,MAAe,CACpBC,eAAgB,I,EAGXC,kBAAoB,SAACnB,GAC1B,GAAIA,EAAEoB,cAAe,CACnB,IAAMjB,EAAQH,EAAEoB,cAAcC,YAC1B,EAAKJ,MAAMC,eAAeI,SAASnB,GACrC,EAAKoB,SAAS,CACZL,eAAgB,EAAKD,MAAMC,eAAeM,QAAO,SAACC,GAAD,OAAUA,IAAQtB,OAGrE,EAAKoB,SAAS,CACZL,eAAe,GAAD,mBAAM,EAAKD,MAAMC,gBAAjB,CAAiCf,Q,EAMhDuB,QAAU,SAACvB,GAChB,OAAI,EAAKc,MAAMC,eAAeI,SAASnB,GAC9B,UAEF,I,EAGFwB,YAAc,WACnB,OAAI,EAAKV,MAAMC,eAAetC,QAAU,EAC/B,EAAKF,MAAMO,YAAYuC,QAAO,SAACC,GAAD,OAAW,EAAKR,MAAMC,eAAeI,SAASG,EAAItB,UAASrB,KAAI,SAAC2C,GAAD,OAASA,EAAI1C,MAE5G,I,uDAIP,OACE,qCACE,cAAC,EAAD,CACEO,MAAOH,KAAKT,MAAMY,MAClBL,YAAaE,KAAKT,MAAMO,YACxB2C,iBAAiB,EACjB3B,YAAad,KAAKT,MAAMmD,4BACxBlD,UAAWQ,KAAKwC,gBAElB,sBAAK5C,GAAG,aAAR,UACE,oBAAI+C,MAAO,CAAEC,UAAW,SAAxB,sFACA,ivBAGA,sBAAKD,MAAO,CAAEE,UAAW,QAAzB,UACE,8CACA,wBAAQC,QAAS9C,KAAKgC,kBAAmBe,UAAS,wBAAmB/C,KAAKuC,QAAQ,mCAAlF,4CACA,wBAAQO,QAAS9C,KAAKgC,kBAAmBe,UAAS,wBAAmB/C,KAAKuC,QAAQ,mCAAlF,4CACA,wBAAQO,QAAS9C,KAAKgC,kBAAmBe,UAAS,0BAAqB/C,KAAKuC,QAAQ,6BAApF,sCACA,wBAAQO,QAAS9C,KAAKgC,kBAAmBe,UAAS,wBAAmB/C,KAAKuC,QAAQ,uBAAlF,gCACA,wBAAQO,QAAS9C,KAAKgC,kBAAmBe,UAAS,8BAAyB/C,KAAKuC,QAAQ,yCAAxF,kDACA,wBAAQO,QAAS9C,KAAKgC,kBAAmBe,UAAS,yBAAoB/C,KAAKuC,QAAQ,uBAAnF,6C,GAxDiCrD,IAAM0C,gBCtBpCoB,G,MCUW,SAACzD,GAAD,OACpB,sBAAKK,GAAG,sBAAsBmD,UAAU,OAAxC,UACE,wBAAQE,KAAK,SAASF,UAAU,QAAQG,aAAW,QAAQJ,QAASvD,EAAM4D,MAA1E,SACE,sBAAMC,cAAY,OAAlB,oBAEF,qBAAKL,UAAU,cAAf,SACI,wEAIF,sBAAKA,UAAU,YAAf,UACE,qBAAKM,IAAKnG,EAAUqC,EAAMQ,WAAWsB,WAAYiC,IAAI,2BAAOP,UAAU,YACtE,qBAAIJ,MAAO,CAAEY,QAAS,gBAAtB,UAAyChE,EAAMQ,WAAWoB,KAA1D,KAAkE5B,EAAMQ,WAAWiB,MAAnF,OACA,sBAAK+B,UAAU,aAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,gEACCxD,EAAMQ,WAAWyD,UAAUC,KAAK,UAEnC,sBAAKV,UAAU,kBAAf,UACE,8CACCxD,EAAMQ,WAAW2D,YAEpB,sBAAKX,UAAU,kBAAf,UACE,8CACCxD,EAAMQ,WAAW4D,OAAOF,KAAK,UAEhC,sBAAKV,UAAU,kBAAf,UACE,8CACCxD,EAAMQ,WAAW6D,WAAWH,KAAK,qBCanCI,E,4MAjCN/B,MAAe,CACpBgC,oBAAqB,EACrBC,uBAAuB,G,EAGlBC,cAAgB,SAACpE,GACtB,EAAKwC,SAAS,CACZ0B,oBAAqBlE,EACrBmE,uBAAuB,K,EAIpBE,eAAiB,WACtB,EAAK7B,SAAS,CACZ2B,uBAAuB,K,uDAKzB,OACE,sBAAKhB,UAAU,MAAf,UAEI/C,KAAK8B,MAAMiC,uBAAyB,cAAC,EAAD,CAClCZ,MAAOnD,KAAKiE,eACZlE,WAAamE,EAAgClE,KAAK8B,MAAMgC,uBAG9D,cAACK,EAAD,CAAkBzB,4BAA6B1C,KAAKgE,cAAelE,YAAaoE,EAAgC/D,MAAOiE,EAAoBC,MAAOC,W,GA5BtIpF,IAAM0C,eCLT2C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d4727d5e.chunk.js","sourcesContent":["import { PartyType } from './interface';\r\n\r\nexport function base64Url(str: string) : string {\r\n  return `data:image/jpeg;base64, ${str}`;\r\n}\r\n\r\nexport function getPartyColor(party: PartyType) : string {\r\n  switch(party){\r\n    case '中國國民黨':\r\n      return '#005CAF';\r\n    case '民主進步黨':\r\n      return '#24936E'\r\n    case '親民黨':\r\n      return '#F05E1C'\r\n    case '時代力量':\r\n      return '#FFB11B';\r\n    case '無黨團結聯盟':\r\n      return '#C1328E';\r\n    default:\r\n      return '#656765';\r\n  }\r\n}","import React from 'react';\r\nimport \"vis-network/styles/vis-network.css\";\r\nimport { DataSet, Network, NodeOptions, Options } from 'vis-network';\r\nimport { base64Url, getPartyColor } from '../../util';\r\n\r\nimport {\r\n  Legislator,\r\n  Node,\r\n  Edge as EdgeModel,\r\n  Graph as GraphModel\r\n} from '../../interface'; \r\n\r\ntype Props = {\r\n  legislators: Legislator[];\r\n  graph: GraphModel;\r\n  hideNodes?: number[];\r\n  showCommunities: boolean;\r\n  onClickNode: (id: number) => void;\r\n}\r\n\r\ninterface GraphNode extends NodeOptions {\r\n  id: number;\r\n  label: string;\r\n};\r\n\r\n\r\nconst graphOption: Options = {\r\n  edges: {\r\n    smooth: false,\r\n    color: \"rgba(145, 152, 159, 0.5)\",\r\n  },\r\n  layout: {\r\n    improvedLayout: false,\r\n    randomSeed: 5,\r\n  },\r\n  nodes: {\r\n    shape: 'circularImage',\r\n    borderWidth: 4,\r\n    borderWidthSelected: 8,\r\n    font: {\r\n      size: 25,\r\n      color: \"#080808\",\r\n      bold: {\r\n        size: 40,\r\n      },\r\n    },\r\n    scaling: {\r\n      min: 30,\r\n      max: 125,\r\n    }\r\n  },\r\n  physics: {\r\n    solver: 'forceAtlas2Based',\r\n    barnesHut: {\r\n      springLength: 1000,\r\n      gravitationalConstant: -25000 \r\n    },\r\n    forceAtlas2Based: {\r\n      springLength: 800,\r\n      gravitationalConstant: -1500,\r\n      avoidOverlap: 0.2,\r\n    },\r\n    minVelocity: 15,\r\n  },\r\n  interaction: {\r\n    hover: true,\r\n    tooltipDelay: 100,\r\n  },\r\n};\r\n\r\nexport default class Graph extends React.PureComponent<Props> {\r\n  private containerRef = React.createRef<HTMLDivElement>();\r\n  private network ?: Network;\r\n  private nodes ?: DataSet<GraphNode>;\r\n  private edges ?: DataSet<any>;\r\n\r\n  public initGraph() {\r\n    if (this.containerRef && this.containerRef.current){\r\n      this.nodes = new DataSet<GraphNode>();\r\n\r\n      this.props.graph.nodes.forEach((node) => {\r\n        this.nodes?.add(this.toGraphNode(node));\r\n      });\r\n\r\n      this.edges = new DataSet();\r\n      this.props.graph.edges.forEach((edge) => {\r\n        if (edge.weight > 25) {\r\n          this.edges?.add(this.toGraphEdge(edge));\r\n        }\r\n      });\r\n\r\n      this.network = new Network(this.containerRef.current, { \r\n        nodes: this.nodes,\r\n        edges: this.edges,\r\n      }, graphOption);\r\n\r\n      this.network.on('doubleClick', (e) => {\r\n        if (e.nodes && e.nodes.length > 0) {\r\n          this.props.onClickNode(e.nodes[0]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public toGraphNode(node: Node) : GraphNode {\r\n    const legislator = this.props.legislators[node.id];\r\n    const border = getPartyColor(legislator.party);\r\n    return {\r\n      id: node.id,\r\n      label: `${legislator.name}`,\r\n      image: base64Url(legislator.picBase64),\r\n      value: node.weight,\r\n      font: {\r\n        color: border,\r\n        size: 30\r\n      },\r\n      color: {\r\n        border,\r\n        hover: {\r\n          border,\r\n        },\r\n        highlight: {\r\n          border,\r\n        }\r\n      },\r\n    };\r\n  }\r\n\r\n  public toGraphEdge(edge: EdgeModel) : any {\r\n    return {\r\n      from: edge.edge[0],\r\n      to: edge.edge[1],\r\n    }\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.initGraph();\r\n  }\r\n\r\n  public componentDidUpdate = () => {\r\n    this.repaint();\r\n    if (this.props.hideNodes && this.props.hideNodes.length) {\r\n      this.nodes?.update(this.props.hideNodes.map((id) => ({\r\n          id,\r\n          hidden: true,\r\n        })\r\n      ));\r\n    }\r\n  }\r\n\r\n  public repaint = () => {\r\n    this.nodes?.update(this.props.legislators.map((legislator) => ({\r\n      id: legislator.id,\r\n      hidden: false,\r\n    })));\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div ref={this.containerRef} id=\"interactivegraph-graph-container\" />\r\n      )\r\n  }\r\n}","import GraphController from './GraphController';\r\n\r\nexport default GraphController;","import React from 'react';\r\n\r\nimport Graph from './Graph';\r\n\r\nimport {\r\n  Legislator,\r\n  Graph as GraphModel,\r\n  Bill,\r\n  PartyType,\r\n} from '../../interface';\r\n\r\nimport './GraphController.css';\r\n\r\ntype Props = {\r\n  legislators: Legislator[];\r\n  graph: GraphModel;\r\n  bills: Bill[];\r\n  onDoubleClickLegislatorNode: (legislatorid: number) => void;\r\n}\r\n\r\ntype State = {\r\n  clickedParties: PartyType[];\r\n};\r\n\r\nexport default class GraphController extends React.PureComponent<Props, State> {\r\n  public state: State = {\r\n    clickedParties: []\r\n  };\r\n\r\n  public onClickPartyLabel = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    if (e.currentTarget) {\r\n      const party = e.currentTarget.textContent as PartyType;\r\n      if (this.state.clickedParties.includes(party)) {\r\n        this.setState({\r\n          clickedParties: this.state.clickedParties.filter((val) => (val !== party)),\r\n        });\r\n      } else {\r\n        this.setState({\r\n          clickedParties: [...this.state.clickedParties, party],\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  public clicked = (party: PartyType) => {\r\n    if (this.state.clickedParties.includes(party)) {\r\n      return 'clicked'\r\n    }\r\n    return '';\r\n  }\r\n\r\n  public filterNodes = (): number[] => {\r\n    if (this.state.clickedParties.length >= 1) {\r\n      return this.props.legislators.filter((val) => (!this.state.clickedParties.includes(val.party))).map((val) => val.id);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Graph\r\n          graph={this.props.graph}\r\n          legislators={this.props.legislators}\r\n          showCommunities={false}\r\n          onClickNode={this.props.onDoubleClickLegislatorNode}\r\n          hideNodes={this.filterNodes()}\r\n        />\r\n        <div id='left-panel'>\r\n          <h2 style={{ textAlign: 'right' }}>第九屆立委提案網路視覺化</h2>\r\n          <p>\r\n          灣形便，動世科來舉經突分委的亮一也接書本家熱業時門酒、唱不言良供，分教除場推高地只健孩，清通失於話我平別了土苦加一散此明乎形便！灣人真聞？光言現這辦身。學解得魚這定？生畫遊：器的阿子開園家生點；家易智出中病馬臺以始選動們叫你因源年起更又日。\r\n          </p>\r\n          <div style={{ marginTop: '3rem' }}>\r\n            <h4>政黨</h4>\r\n            <button onClick={this.onClickPartyLabel} className={`btn color-kmt ${this.clicked('中國國民黨')}`}>中國國民黨</button>\r\n            <button onClick={this.onClickPartyLabel} className={`btn color-dpp ${this.clicked('民主進步黨')}`}>民主進步黨</button>\r\n            <button onClick={this.onClickPartyLabel} className={`btn color-times ${this.clicked('時代力量')}`}>時代力量</button>\r\n            <button onClick={this.onClickPartyLabel} className={`btn color-pfp ${this.clicked('親民黨')}`}>親民黨</button>\r\n            <button onClick={this.onClickPartyLabel} className={`btn color-nonleague ${this.clicked('無黨團結聯盟')}`}>無黨團結聯盟</button>\r\n            <button onClick={this.onClickPartyLabel} className={`btn color-none ${this.clicked('無黨籍')}`}>無黨籍</button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}","import LegislatorInfoTab from './LegislatorInfoTab';\r\n\r\nexport default LegislatorInfoTab;","import React from 'react';\r\n\r\nimport { Legislator } from '../../interface';\r\n\r\nimport './LegislatorInfoTab.css';\r\nimport { base64Url } from '../../util';\r\n\r\ntype Props = {\r\n  legislator: Legislator;\r\n  close: () => void;\r\n}\r\n\r\nconst LegislatorInfoTab = (props: Props) => (\r\n      <div id='legislator-info-tab' className='card'>\r\n        <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={props.close}>\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n        <div className=\"card-header\">\r\n            <h3>\r\n              立委個人資訊\r\n            </h3>\r\n          </div>\r\n          <div className='card-body'>\r\n            <img src={base64Url(props.legislator.picBase64)} alt='立委頭像' className='rounded' />\r\n            <h4 style={{ display: 'inline-block' }}>{props.legislator.name} ({props.legislator.party})</h4>\r\n            <div className='list-group'>\r\n              <div className='list-group-item'>\r\n                <h5>委員會經歷</h5>\r\n                {props.legislator.committee.join(' ; ')}\r\n              </div>\r\n              <div className='list-group-item'>\r\n                <h5>選區</h5>\r\n                {props.legislator.areaName}\r\n              </div>\r\n              <div className='list-group-item'>\r\n                <h5>學歷</h5>\r\n                {props.legislator.degree.join(' ; ')}\r\n              </div>\r\n              <div className='list-group-item'>\r\n                <h5>經歷</h5>\r\n                {props.legislator.experience.join(' ; ')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n);\r\n\r\nexport default LegislatorInfoTab;","import React from 'react';\nimport './App.css';\nimport LegislatorJson from './data/legislator.json';\nimport BillJson from './data/remove-none-legislator-bill.json';\nimport GraphJson from './data/graph.json';\nimport InteractiveGraph from './component/InteractiveGraph';\nimport LegislatorInfoTab from './component/LegislatorInfoTab';\n\nimport {\n  Legislator,\n  Graph,\n  Bill,\n} from './interface';\n\ntype State = {\n  clickedLegislatorId: number;\n  showLegislatorInfoTab: boolean;\n}\n\nclass App extends React.PureComponent<{}, State> {\n  public state: State = {\n    clickedLegislatorId: 0,\n    showLegislatorInfoTab: false,\n  };\n\n  public onDoubleClick = (id: number) => {\n    this.setState({\n      clickedLegislatorId: id,\n      showLegislatorInfoTab: true,\n    });\n  }\n\n  public onCloseInfoTab = () => {\n    this.setState({\n      showLegislatorInfoTab: false,\n    });\n  }\n\n  public render() {\n    return (\n      <div className=\"App\">\n        {\n          this.state.showLegislatorInfoTab && <LegislatorInfoTab\n            close={this.onCloseInfoTab}\n            legislator={(LegislatorJson as Legislator[])[this.state.clickedLegislatorId]}\n          />\n        }\n      <InteractiveGraph onDoubleClickLegislatorNode={this.onDoubleClick} legislators={LegislatorJson as Legislator[]} graph={GraphJson as Graph} bills={BillJson as Bill[]} />\n  </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}